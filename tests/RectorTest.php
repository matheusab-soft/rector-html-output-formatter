<?php

declare(strict_types=1);

use PHPUnit\Framework\TestCase;

final class RectorTest extends TestCase
{

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @covers       \MAB\Rector\HtmlOutputFormatter
     * @dataProvider dataProvider
     * @return void
     */
    public function testTerminalCommandGeneratedHtmlReport(
        string $generatedReportFile,
        string $generatedDataFile,
        string $rectorConfigFile
    ): void {
        $this->cleanup($generatedDataFile, $generatedReportFile);

        $rectorBin = realpath(__DIR__ . '/../vendor/bin/rector');
        $testSrcPath = realpath(__DIR__ . '/test_src');

        $expectedCommandResult = 'Report generated at rector-report.html';
        $expectedReportContent = file_get_contents(__DIR__ . '/expected-rector-report-report.html');

        $this->assertFileDoesNotExist($generatedDataFile);
        $this->assertFileDoesNotExist($generatedReportFile);

        $command = "$rectorBin -c $rectorConfigFile process $testSrcPath --dry-run --output-format=html";
        $commandResult = shell_exec($command);
        $actualReportContent = file_get_contents($generatedReportFile);

        $this->assertEquals($expectedCommandResult, $commandResult);
        $this->assertFileExists($generatedDataFile);
        $this->assertFileExists($generatedReportFile);
        $this->assertEquals($expectedReportContent, $actualReportContent);
    }

    public static function dataProvider()
    {
        return [
            [
                __DIR__ . '/generated/rector-report-report.html',
                __DIR__ . '/generated/rector-report-data.php',
                'tests/rector.php',
            ],
        ];
    }

    private function cleanup(string $generatedDataFile, string $generatedReportFile)
    {
        @unlink($generatedDataFile);
        @unlink($generatedReportFile);
    }

}